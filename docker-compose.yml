version: "3.4"
networks:
  api-shop:
    driver: bridge

services:
  redis:
    image: redis
    networks:
      - api-shop
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Doyouloveme1029!
      - MSSQL_PID=Express
    restart: unless-stopped
    networks:
      - api-shop

  kafka:
    image: bitnami/kafka:latest
    networks:
      - api-shop
    ports:
      - "9092:9092"   # internal (containers)
      - "29092:29092" # external (host/DevContainer)
    environment:
      # Enable KRaft mode (no ZooKeeper)
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

      # Listeners: internal (9092), external (29092), controller (9093)
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      # Allow plaintext in dev
      - ALLOW_PLAINTEXT_LISTENER=yes

    restart: unless-stopped
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    networks:
      - api-shop
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  web-api:
    build:
      context: .
      dockerfile: HardwareShop.WebApi/Dockerfile
    restart: unless-stopped
    ports:
      - "5068:5000"
    networks:
      - api-shop
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - db
      - redis
      - kafka
